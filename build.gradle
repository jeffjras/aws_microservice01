plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.palantir.docker' version '0.35.0'
}

//TODO o mesmo do Hub ID
group = 'jefjras'
version = '1.0.6'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mariadb.jdbc:mariadb-java-client:3.2.0'
	implementation 'org.springframework:spring-jms:5.2.9.RELEASE'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.13'
	implementation 'com.amazonaws:aws-java-sdk-sns:1.12.13'
	implementation 'com.amazonaws:aws-java-sdk-sqs:1.12.13'
	implementation 'org.modelmapper:modelmapper:3.2.0'
	implementation 'com.amazonaws:amazon-sqs-java-messaging-lib:1.0.8'
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.14'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-migrationsupport:5.8.0'
}

tasks.register('unpack', Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}

docker {
	name "${project.group}/${project.name}"
	buildx true
	platform 'linux/amd64'
	copySpec.from(tasks.unpack.outputs).into('dependency')
	buildArgs(['DEPENDENCY' : "dependency"])
}

tasks.named('test') {
	useJUnitPlatform()
}
